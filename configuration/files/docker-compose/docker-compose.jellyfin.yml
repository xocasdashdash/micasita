version: "3.8"
services:
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    network_mode: 'host'
    user: 1000:1000
    volumes:
      - "{{ base_directory }}/jellyfin:/config"
      - /data/jellyfin_cache:/cache
      # Movies
      - /media/external_data/movies:/movies/external_data
      - /media/usb/Peliculas/:/movies/usb_ntfs
      - /media/data/movies:/movies/intel_nuc_media
      - /media/usb-data/movies:/movies/usb-data
      # TV
      - /media/external_data/tv:/tv/external_data
      - /media/usb/Shows/:/tv/usb_ntfs
      - /media/data/tv:/tv/intel_nuc_media
      - /media/usb-data/tv:/tv/usb-data

    group_add:
    # by id as these may not exist within the container. Needed to provide permissions to the VAAPI Devices
      - '109' #render
      - '44' #video
    restart: 'unless-stopped'
    # Optional - alternative address used for autodiscovery
    environment:
      #- JELLYFIN_PublishedServerUrl=https://jellyfin.{{ public_domain }}
      - PUID=1000
      - PGID=1000
      - TZ={{ tz }}
      - ALLOWED_NETWORKS=192.168.50.0/24,172.16.0.0/16
      # Configs for jellyfin to fix issue with wall-e
      # - JELLYFIN_FFmpeg__probesize=100000000
      # - JELLYFIN_FFmpeg__analyzeduration=100000000
    devices:
      - "/dev/dri/card0:/dev/dri/card0"
      - "/dev/dri/renderD128:/dev/dri/renderD128"
    privileged: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=HostRegexp(`jellyfin.{any:.+}`)"
      - "traefik.http.routers.jellyfin.entrypoints=websecure"
      - "traefik.http.routers.jellyfin.tls=true"
      - "traefik.http.routers.jellyfin.tls.certresolver=letsencrypt"
      - 'traefik.http.routers.jellyfin.tls.domains=jellyfin.{{ public_domain }}'
      ## Middleware
      - 'traefik.http.routers.jellyfin.middlewares=jellyfin-mw'
      #### The customResponseHeaders option lists the Header names and values to apply to the response.
      - 'traefik.http.middlewares.jellyfin-mw.headers.customResponseHeaders.X-Robots-Tag=noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
      #### The sslRedirect is set to true, then only allow https requests.
      #- 'traefik.http.middlewares.jellyfin-mw.headers.SSLRedirect=true'
      #### The sslHost option is the host name that is used to redirect http requests to https.
      #### This is the exact URL that will be redirected to, so you can remove the :9999 port if using default SSL port
      #- 'traefik.http.middlewares.jellyfin-mw.headers.SSLHost=jellyfin.{{ public_domain }}'
      #### Set sslForceHost to true and set SSLHost to forced requests to use SSLHost even the ones that are already using SSL.
      #### Note that this uses SSLHost verbatim, so add the port to SSLHost if you are using an alternate port.
      #- 'traefik.http.middlewares.jellyfin-mw.headers.SSLForceHost=true'
      #### The stsSeconds is the max-age of the Strict-Transport-Security header. If set to 0, would NOT include the header.
      #- 'traefik.http.middlewares.jellyfin-mw.headers.STSSeconds=315360000'
      #### The stsIncludeSubdomains is set to true, the includeSubDomains directive will be
      #### appended to the Strict-Transport-Security header.
      #- 'traefik.http.middlewares.jellyfin-mw.headers.STSIncludeSubdomains=true'
      #### Set stsPreload to true to have the preload flag appended to the Strict-Transport-Security header.
      #- 'traefik.http.middlewares.jellyfin-mw.headers.STSPreload=true'
      #### Set forceSTSHeader to true, to add the STS header even when the connection is HTTP.
      #- 'traefik.http.middlewares.jellyfin-mw.headers.forceSTSHeader=true'
      #### Set frameDeny to true to add the X-Frame-Options header with the value of DENY.
      #- 'traefik.http.middlewares.jellyfin-mw.headers.frameDeny=true'
      #### Set contentTypeNosniff to true to add the X-Content-Type-Options header with the value nosniff.
      #- 'traefik.http.middlewares.jellyfin-mw.headers.contentTypeNosniff=true'
      #### Set browserXssFilter to true to add the X-XSS-Protection header with the value 1; mode=block.
      #- 'traefik.http.middlewares.jellyfin-mw.headers.customresponseheaders.X-XSS-PROTECTION=0'
      #### The customFrameOptionsValue allows the X-Frame-Options header value to be set with a custom value. This
      #### overrides the FrameDeny option.
      #- "traefik.http.middlewares.jellyfin-mw.headers.customFrameOptionsValue='allow-from https://jellyfin.{{ public_domain }}'"
      # We define the port here as a port is required, but note that the service is pointing to the service defined in @file
      - 'traefik.http.routers.jellyfin.service=jellyfin-svc@file'
      - 'traefik.http.services.jellyfin-svc.loadBalancer.server.port=8096'
      - 'traefik.http.services.jellyfin-svc.loadBalancer.passHostHeader=true'
      ## Redirection of HTTP on port 9999 to HTTPS on port 9999 (consistent protocol)
      - 'traefik.http.routers.jellyfin-insecure.entryPoints=websecure'
      - 'traefik.http.routers.jellyfin-insecure.rule=HostRegexp(`jellyfin.{any:.+}`)' # OPTIONAL: && PathPrefix(`/jellyfin`)
      - 'traefik.http.routers.jellyfin-insecure.middlewares=jellyfin-insecure-mw'
      - 'traefik.http.middlewares.jellyfin-insecure-mw.redirectscheme.scheme=https'
      - 'traefik.http.middlewares.jellyfin-insecure-mw.redirectscheme.port=9999' # remove if you are using a default port
      - 'traefik.http.middlewares.jellyfin-insecure-mw.redirectscheme.permanent=false'
      - 'traefik.http.routers.jellyfin-insecure.service=noop@internal'
networks:
  main:
    external:
      name: main
  wgnet:
    external:
      name: wgnet