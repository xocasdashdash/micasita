version: "3.8"
services:
  flaresolverr:
    networks: [main]
    image: "ghcr.io/flaresolverr/flaresolverr:latest"
    container_name: "flaresolverr"
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ={{ tz }}
      - LOG_LEVEL=info
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flaresolverr.rule=HostRegexp(`flaresolverr.{any:.+}`)"
      - "traefik.http.routers.flaresolverr.entrypoints=websecure"
      - "traefik.http.routers.flaresolverr.tls=true"
      - "traefik.http.routers.flaresolverr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.flaresolverr.service=flaresolverr"
      - "traefik.http.services.flaresolverr.loadbalancer.server.port=8191"
{% for config in servarr_config %}
  {{ config.name }}:
    networks:
      - main
{% for network in config.networks |default([]) %}
      - {{ network }}
{% endfor %}
    image: lscr.io/linuxserver/{{ config.name }}:{{ config.imageTag | default ("latest") }}
    container_name: {{ config.name }}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.{{ config.name }}.rule=HostRegexp(`{{ config.name }}.{any:.+}`)"
      - "traefik.http.routers.{{ config.name }}.entrypoints=websecure"
      - "traefik.http.routers.{{ config.name }}.tls=true"
      - "traefik.http.routers.{{ config.name }}.tls.certresolver=letsencrypt"
      - "traefik.http.routers.{{ config.name }}.service={{ config.name }}"
      - "traefik.http.services.{{ config.name }}.loadbalancer.server.port={{ config.port }}"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ={{ tz }}
{% for env in config.environment|default([]) %}
      - {{ env }}
{% endfor %}
    volumes:
      - "{{ base_directory }}/arr/{{ config.name }}:/config"
      - "/data:/data"
      - "/media/data:/media/data"
      - "/media/external_data:/media/external_data"
      - "/media/usb-data:/media/usb-data"
      - "/media/data/downloads:/downloads"
      - "/media/data/incomplete-downloads:/incomplete-downloads"
{% for vol in config.extraVolumes|default([]) %}
      - "{{ vol }}"
{% endfor %}
    restart: unless-stopped
{% endfor %}

networks:
  main:
    external:
      name: main
  wgnet:
    external:
      name: wgnet
