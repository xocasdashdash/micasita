services:
  whoami:
    networks: [main]
    image: "traefik/whoami"
    container_name: "simple-service"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=HostRegexp(`whoami.{any:.+}`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.routers.whoami.tls.certresolver=letsencrypt"

  traefik:
    networks: [main]
    container_name: traefik
    image: docker.io/traefik:latest@sha256:84eb6c0e67c99fa026bf1bf4b0afd9ad44350d375b4ebc5049c5f70543a729d6
    restart: unless-stopped
    volumes:
      - "{{ base_directory }}/traefik/certs/:/letsencrypt/"
      - "{{ base_directory }}/traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro"
      - "{{ base_directory }}/traefik/traefik.jellyfin.toml:/configuration/traefik.jellyfin.toml:ro"
      - "{{ base_directory }}/traefik/traefik-tls.yaml:/configuration/traefik-tls.yaml:ro"
      - "{{ base_directory }}/traefik/logs:/logs"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - CLOUDFLARE_EMAIL={{ secret.cloudflare.email }}
      - CLOUDFLARE_DNS_API_TOKEN={{ secret.cloudflare.token }}
    command:
      #- "--log.level=DEBUG"
      - --api.insecure=true
      # Set up LetsEncrypt
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.email={{ secret.cloudflare.email }}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.defaultrule="HostRegexp(`{{ '{{' }} .Name {{ '}}' }}.{any:.+}`)"
      - --entrypoints.web.address=:80
      - --entrypoints.web-secure.address=:443
      - --providers.file.directory=/configuration/
      - --providers.file.watch=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.rule=HostRegexp(`traefik.{any:.+}`)"
      - "traefik.http.routers.dashboard.middlewares=redirect-to-dashboard"
      - "traefik.http.middlewares.redirect-to-dashboard.redirectregex.regex=^https:\\/\\/([^\\/]+)\\/?$$"
      - "traefik.http.middlewares.redirect-to-dashboard.redirectregex.replacement=https://$$1/dashboard/"
      - "traefik.http.routers.dashboard.service=dashboard"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
      # - "traefik.http.routers.traefik.tls=true"
      # - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.traefik.rule=HostRegexp(`^pihole\.{{ public_domain }}$`)"

    healthcheck:
      test:
        - CMD
        - traefik
        - healthcheck
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "80:80"
      - "443:443"
      - "1883:1883"
      - "53:53/tcp"
      - "53:53/udp"
networks:
  main:
    external: true
  wgnet:
    external: true
